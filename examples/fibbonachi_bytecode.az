fn bytecode_fib(n: float) -> float {
    var a = 0.0
    var b = 1.0
    var i = 0.0

    bytecode {                                        // [n, a, b, i         ]

        // LOOP CONDITION
        dup
        takef 0                                       // [ n, a, b, i, i, n  ]
        lt                                            // [ n, a, b, i, i < n ]
        jif 13                                        // [ n, a, b, i        ]

        // LOOP BODY
            takef 1                                   // [ n, a, b, i, a    ]
            takef 2                                   // [ n, a, b, i, a, b ]
            add                                       // [ n, a, b, i, a+b  ]
            
            iswap 1 2                                 // [ n, b, a, i, a+b  ]

            repf 2                                    // [ n, b, a+b, i     ]

            inc                                       // [ n, b, a+b, i+1   ]

        // LOOP CONCULUSION
        bjmp 19

        // FUNCTION CONCULUSION
        takef 1
    
    }
}

assert_info(bytecode_fib(10.0) == 55.0, "bytecode_fib(10.0) == 55.0")